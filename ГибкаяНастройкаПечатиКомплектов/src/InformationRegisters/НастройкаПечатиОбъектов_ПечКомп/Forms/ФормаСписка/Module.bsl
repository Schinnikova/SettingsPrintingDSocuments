
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЗаполнитьНастройкиПечатиОбъектов();
	
	Если НЕ ПраваПользователяПовтИсп.ДобавлениеИзменениеНастройкиПечатиОбъектов()
	 И НЕ ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию() Тогда
		Элементы.НастройкиПечатиОбъектовДобавить.Видимость = Ложь;
		Элементы.НастройкиПечатиОбъектовУдалить.Видимость  = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиПечатиОбъектов" Тогда
		ЗаполнитьНастройкиПечатиОбъектов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиПечатиОбъектов

&НаКлиенте
Процедура НастройкиПечатиОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Перем КлючЗаписи;
	Перем ДанныеКлючаЗаписи;

	Если Элемент.ТекущийЭлемент = Элементы.НастройкиПечатиОбъектовПредставление
		И Элементы.НастройкиПечатиОбъектов.ТекущиеДанные <> Неопределено
		И Элементы.НастройкиПечатиОбъектов.ТекущиеДанные.ИндексКартинки = 0 Тогда

		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.НастройкиПечатиОбъектов.ТекущиеДанные;

		Если НЕ ПолучитьДанныеКлючаЗаписи(ТекущиеДанные.ПолучитьИдентификатор(), ДанныеКлючаЗаписи) Тогда
			Возврат;
		КонецЕсли;

		Если ЗаписьСуществует(ДанныеКлючаЗаписи) Тогда
			МассивПараметровКонструктора = Новый Массив;
			МассивПараметровКонструктора.Добавить(ДанныеКлючаЗаписи);

			КлючЗаписи = Новый("РегистрСведенийКлючЗаписи.НастройкаПечатиОбъектов_ПечКомп", МассивПараметровКонструктора);
		КонецЕсли;

		ОткрытьФорму(
			"РегистрСведений.НастройкаПечатиОбъектов_ПечКомп.ФормаЗаписи",
			Новый Структура("Ключ,ЗначенияЗаполнения",
			КлючЗаписи, ДанныеКлючаЗаписи),,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	ОткрытьФорму("РегистрСведений.НастройкаПечатиОбъектов_ПечКомп.ФормаЗаписи",,,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	ТекущиеДанные = Элементы.НастройкиПечатиОбъектов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Укажите настройку печати для удаления'"));
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ИндексКартинки = 1 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Невозможно удалить группировку'"));
		Возврат;
	КонецЕсли;
	
	СписокКнопок = Новый СписокЗначений();
	СписокКнопок.Добавить("Удалить", НСтр("ru = 'Удалить'"));
	СписокКнопок.Добавить("НеУдалять", НСтр("ru = 'Не удалять'"));
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьЗавершение", ЭтотОбъект, Новый Структура("ТекущиеДанные", ТекущиеДанные)), НСтр("ru = 'Удалить настройку печати?'"), СписокКнопок);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьНастройкиПечатиОбъектов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНастройкиПечатиОбъектов()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НастройкиПечатиОбъектов.ТипОбъекта КАК ТипОбъекта,
	|	НастройкиПечатиОбъектов.Наименование КАК Наименование,
	|	НастройкиПечатиОбъектов.Идентификатор КАК Идентификатор,
	|	НастройкиПечатиОбъектов.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.НастройкаПечатиОбъектов_ПечКомп КАК НастройкиПечатиОбъектов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипОбъекта,
	|	Порядок");

	РезультатЗапроса = Запрос.Выполнить();
	НастройкиПечатиОбъектов.ПолучитьЭлементы().Очистить();
	ДеревоЗначений = РеквизитФормыВЗначение("НастройкиПечатиОбъектов");

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			СтрокаТипОбъекта = ДеревоЗначений.Строки.Добавить();
			СтрокаТипОбъекта.Настройка = Выборка.Идентификатор;
			СтрокаТипОбъекта.Представление = Выборка.Наименование;
			СтрокаТипОбъекта.ИндексКартинки = 0;

		КонецЦикла;
	КонецЕсли;

	ЗначениеВРеквизитФормы(ДеревоЗначений, "НастройкиПечатиОбъектов");
	
КонецПроцедуры

&НаСервере
Функция УдалитьНастройкуПечатиСервер(ИдентификаторСтроки)
	
	Перем ДанныеКлючаЗаписи;

	Если НЕ ПроверитьПраваПользователяНаИзменение(ИдентификаторСтроки) Тогда
		Возврат Ложь;
	КонецЕсли;

	Если НЕ ПолучитьДанныеКлючаЗаписи(ИдентификаторСтроки, ДанныеКлючаЗаписи) Тогда
		Возврат Ложь;
	КонецЕсли;

	Если ЗаписьСуществует(ДанныеКлючаЗаписи) Тогда

		МассивПараметровКонструктора = Новый Массив;
		МассивПараметровКонструктора.Добавить(ДанныеКлючаЗаписи);
		РегистрыСведений.НастройкаПечатиОбъектов_ПечКомп.УдалитьНастройкиПечатиОбъекта(ДанныеКлючаЗаписи.ТипОбъекта, ДанныеКлючаЗаписи.Организация, ДанныеКлючаЗаписи.Контрагент, ДанныеКлючаЗаписи.Идентификатор);
		ЗаполнитьНастройкиПечатиОбъектов();

		Возврат Истина;

	Иначе

		Возврат Ложь;

	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗаписьСуществует(ДанныеКлючаЗаписи)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НастройкаПечатиОбъектов.ТипОбъекта
	|ИЗ
	|	РегистрСведений.НастройкаПечатиОбъектов_ПечКомп КАК НастройкаПечатиОбъектов
	|ГДЕ
	|	НастройкаПечатиОбъектов.ТипОбъекта = &ТипОбъекта
	|	И НастройкаПечатиОбъектов.Организация = &Организация
	|	И НастройкаПечатиОбъектов.Контрагент = &Контрагент");
	
	Запрос.УстановитьПараметр("ТипОбъекта",  ДанныеКлючаЗаписи.ТипОбъекта);
	Запрос.УстановитьПараметр("Организация", ДанныеКлючаЗаписи.Организация);
	Запрос.УстановитьПараметр("Контрагент",  ДанныеКлючаЗаписи.Контрагент);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеКлючаЗаписи(ИдентификаторСтроки, ДанныеКлючаЗаписи)

	ТекущиеДанные = НастройкиПечатиОбъектов.НайтиПоИдентификатору(ИдентификаторСтроки);

	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	ДанныеКлючаЗаписи = Новый Структура;
	ДанныеКлючаЗаписи.Вставить("ТипОбъекта", "");
	ДанныеКлючаЗаписи.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ДанныеКлючаЗаписи.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	ДанныеКлючаЗаписи.Вставить("Идентификатор", "");

	ЗаполнитьЗначенияСвойств(ДанныеКлючаЗаписи, ДанныеКлючаЗаписиПоИдентификатору(ТекущиеДанные.Настройка));

	Возврат Истина;

КонецФункции

&НаСервере
Функция ДанныеКлючаЗаписиПоИдентификатору(ИдентификаторНастройки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиПечатиОбъектов.ТипОбъекта КАК ТипОбъекта,
		|	НастройкиПечатиОбъектов.Организация КАК Организация,
		|	НастройкиПечатиОбъектов.Партнер КАК Партнер,
		|	НастройкиПечатиОбъектов.Контрагент КАК Контрагент,
		|	НастройкиПечатиОбъектов.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.НастройкаПечатиОбъектов_ПечКомп КАК НастройкиПечатиОбъектов
		|ГДЕ
		|	НастройкиПечатиОбъектов.Идентификатор = &Идентификатор";

	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторНастройки);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка;

КонецФункции

&НаКлиенте
Процедура УдалитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
    
    
    ОтветНаВопрос = РезультатВопроса;
    
    Если ОтветНаВопрос = "НеУдалять" Тогда
        Возврат;
    КонецЕсли;
    
    ОчиститьСообщения();
    УдалитьНастройкуПечатиСервер(ТекущиеДанные.ПолучитьИдентификатор());

КонецПроцедуры

&НаСервере
Функция ПроверитьПраваПользователяНаИзменение(ИдентификаторСтроки)

	ТекущиеДанные = НастройкиПечатиОбъектов.НайтиПоИдентификатору(ИдентификаторСтроки);

	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ПраваПользователяПовтИсп.ДобавлениеИзменениеНастройкиПечатиОбъектов()
		И НЕ ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Нет прав на удаление настройки печати'"));
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

#КонецОбласти
