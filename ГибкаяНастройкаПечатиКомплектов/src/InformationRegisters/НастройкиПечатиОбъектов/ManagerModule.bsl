#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Возвращает настройки комплекта печатных форм, используемых для объекта
//
// Параметры:
//  ТипОбъекта - Строка - полное наименование объекта, для которого необходимо получить настройки печатных форм
//  МассивСсылок - Массив из ЛюбаяСсылка - ссылки, для которых необходимо получить реквизиты
//  ВариантИспользования - Число - переменная, в которую помещается описание, для каких измерений применяется настройка.
//
// Возвращаемое значение:
// Неопределено, ТаблицаЗначений - таблица значений с колонками:
//  * Имя           - Строка - внутреннее имя печатной формы.
//  * Представление - Строка - пользовательской представление печатной формы.
//  * Экземпляров   - Число - количество экземпляров, выводимых на печать.
//  * Печатать      - Булево - признак, указывающий на необходимость печати печатной формы.
//  * Ссылка        - ЛюбаяСсылка
//
&Вместо("КомплектПечатныхФорм")
Функция ПечКомп_КомплектПечатныхФорм(ТипОбъекта, Знач МассивСсылок, ВариантИспользования) Экспорт
	
	ТаблицаОбъектов = ПечКомп_ТаблицаОбъектовДляПечатиКомплектно();
	ТекущийОбъект = ТаблицаОбъектов.Найти(ТипОбъекта, "ТипОбъекта");
	ВариантИспользования = 0;
	
	Если ТекущийОбъект = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЕстьОрганизация = ТекущийОбъект.ЕстьОрганизация И МассивСсылок <> Неопределено;
	ЕстьКонтрагент = ТекущийОбъект.ЕстьКонтрагент И МассивСсылок <> Неопределено;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОбъектыПечати.Ссылка КАК Ссылка"
		+ ?(ЕстьОрганизация,", ОбъектыПечати.Организация КАК Организация","")
		+ ?(ЕстьКонтрагент,", ОбъектыПечати.Контрагент","") + "
	|ПОМЕСТИТЬ ВТ_Ссылки
	|ИЗ
	|	" + ТипОбъекта + " КАК ОбъектыПечати
	|ГДЕ
	|	ОбъектыПечати.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиПечатиОбъектов.Настройки КАК Настройки,
	|	1 КАК Порядок,
	|	ЕСТЬNULL(ВТ_Ссылки.Ссылка, НЕОПРЕДЕЛЕНО) КАК Ссылка,
	|	NULL КАК Организация,
	|	NULL КАК Контрагент
	|ПОМЕСТИТЬ ВТ_НастройкиПечати
	|ИЗ
	|	РегистрСведений.НастройкиПечатиОбъектов КАК НастройкиПечатиОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ссылки КАК ВТ_Ссылки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НастройкиПечатиОбъектов.ТипОбъекта = &ТипОбъекта
	|	И НастройкиПечатиОбъектов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НастройкиПечатиОбъектов.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	Если ЕстьОрганизация Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиПечатиОбъектов.Настройки,
		|	2,
		|	ЕСТЬNULL(ВТ_Ссылки.Ссылка, НЕОПРЕДЕЛЕНО),
		|	NULL,
		|	НастройкиПечатиОбъектов.Контрагент
		|ИЗ
		|	РегистрСведений.НастройкиПечатиОбъектов КАК НастройкиПечатиОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ссылки КАК ВТ_Ссылки
		|		ПО (ВТ_Ссылки.Организация = НастройкиПечатиОбъектов.Организация)
		|ГДЕ
		|	НастройкиПечатиОбъектов.ТипОбъекта = &ТипОбъекта
		|	И НастройкиПечатиОбъектов.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	КонецЕсли;
	
	Если ЕстьКонтрагент Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиПечатиОбъектов.Настройки,
		|	2,
		|	ЕСТЬNULL(ВТ_Ссылки.Ссылка, НЕОПРЕДЕЛЕНО),
		|	NULL,
		|	НастройкиПечатиОбъектов.ЕстьКонтрагент
		|ИЗ
		|	РегистрСведений.НастройкиПечатиОбъектов КАК НастройкиПечатиОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ссылки КАК ВТ_Ссылки
		|		ПО (ВТ_Ссылки.ЕстьКонтрагент = НастройкиПечатиОбъектов.Контрагент)
		|ГДЕ
		|	НастройкиПечатиОбъектов.ТипОбъекта = &ТипОбъекта
		|	И НастройкиПечатиОбъектов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	КонецЕсли;
	
	Если ТекущийОбъект.ЕстьКонтрагент И ТекущийОбъект.ЕстьОрганизация И МассивСсылок <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиПечатиОбъектов.Настройки,
		|	3,
		|	ЕСТЬNULL(ВТ_Ссылки.Ссылка, НЕОПРЕДЕЛЕНО),
		|	НастройкиПечатиОбъектов.Организация,
		|	НастройкиПечатиОбъектов.Контрагент
		|ИЗ
		|	РегистрСведений.НастройкиПечатиОбъектов КАК НастройкиПечатиОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ссылки КАК ВТ_Ссылки
		|		ПО (ВТ_Ссылки.Контрагент = НастройкиПечатиОбъектов.Контрагент)
		|			И (ВТ_Ссылки.Организация = НастройкиПечатиОбъектов.Организация)
		|ГДЕ
		|	НастройкиПечатиОбъектов.ТипОбъекта = &ТипОбъекта";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НастройкиПечатиСгруппированная.Ссылка КАК Ссылка,
	|	ВТ_НастройкиПечатиСгруппированная.Порядок КАК Порядок,
	|	ВТ_НастройкиПечати.Настройки
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВТ_НастройкиПечати.Порядок) КАК Порядок,
	|		ВТ_НастройкиПечати.Ссылка КАК Ссылка
	|	ИЗ
	|		ВТ_НастройкиПечати КАК ВТ_НастройкиПечати
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_НастройкиПечати.Ссылка) КАК ВТ_НастройкиПечатиСгруппированная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкиПечати КАК ВТ_НастройкиПечати
	|		ПО ВТ_НастройкиПечатиСгруппированная.Порядок = ВТ_НастройкиПечати.Порядок
	|			И ВТ_НастройкиПечатиСгруппированная.Ссылка = ВТ_НастройкиПечати.Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") Тогда
		НовыйМассивСсылок = Новый Массив;
		НовыйМассивСсылок.Добавить(МассивСсылок);
		МассивСсылок = НовыйМассивСсылок;
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.Выполнить();
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипОбъекта);
	//@skip-check bsl-legacy-check-dynamic-feature-access
	КомплектПоУмолчанию = МенеджерОбъекта.КомплектПечатныхФорм();
	КоллекцияПечатныхФорм = ПодготовитьКомплектПечатныхФорм();
	
	// добавление внешних печатных форм в комплект
	ПрефиксВнешнихПечатныхФорм = "ВнешняяПечатнаяФорма.";
	
	ЗапросТаблицаКоманд = ДополнительныеОтчетыИОбработки.НовыйЗапросПоДоступнымКомандам(Перечисления.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма, ТипОбъекта, Истина);
	ТаблицаКоманд = ЗапросТаблицаКоманд.Выполнить().Выгрузить();
	
	Для Каждого КомандаПечати Из ТаблицаКоманд Цикл
		ДобавитьПечатнуюФормуВКомплект(КомплектПоУмолчанию, ПрефиксВнешнихПечатныхФорм + КомандаПечати.Идентификатор, КомандаПечати.Представление, 0);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Для Каждого ОбъектСсылка Из МассивСсылок Цикл
		Если Выборка.НайтиСледующий(ОбъектСсылка, "Ссылка") Тогда
			ВыборкаНастройки = Выборка.Настройки; // ХранилищеЗначения
			НастройкиПечати = ВыборкаНастройки.Получить(); // см. ПодготовитьКомплектПечатныхФорм
			НастройкиПечати.Колонки.Добавить("Ссылка");
		Иначе
			НастройкиПечати = КомплектПоУмолчанию;
		КонецЕсли;
		НастройкиПечати.ЗаполнитьЗначения(ОбъектСсылка, "Ссылка");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НастройкиПечати,КоллекцияПечатныхФорм);
		Выборка.Сбросить();
	КонецЦикла;
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Порядок = 1 Или Выборка.Порядок = 2 Тогда
				ВариантИспользования = Выборка.Порядок;
			Иначе
				ВариантИспользования = 3;
		КонецЕсли;
	КонецЕсли;
	
	Возврат КоллекцияПечатныхФорм;
КонецФункции

// Возвращает таблицу с описанием объектов, для которых предусмотрена
// возможность печати комплекта печатных форм.
//
// Возвращаемое значение:
// ТаблицаЗначений - таблица значений с колонками:
//  * ТипОбъекта      - Строка - полное наименование объекта.
//  * Представление   - Строка - пользовательское представление объекта.
//  * ЕстьОрганизация - Булево - признак наличия организации в объекте.
//  * ЕстьКонтрагент     - Булево - признак наличия контрагента в объекте.
//
Функция ПечКомп_ТаблицаОбъектовДляПечатиКомплектно() Экспорт
	
	ТаблицаОбъектов = Новый ТаблицаЗначений();
	ТаблицаОбъектов.Колонки.Добавить("ТипОбъекта");
	ТаблицаОбъектов.Колонки.Добавить("Представление");
	ТаблицаОбъектов.Колонки.Добавить("ЕстьОрганизация");
	ТаблицаОбъектов.Колонки.Добавить("ЕстьКонтрагент");
	
	// Заказ клиента
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ЗаказКлиента.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ЗаказКлиента.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	// Заявка на возврат товаров от клиента
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	// Счет на оплату
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.СчетНаОплатуКлиенту.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.СчетНаОплатуКлиенту.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	// Доверенность
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДоверенностиНаПолучениеТМЦ") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ДоверенностьВыданная.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ДоверенностьВыданная.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	// Приходный кассовый ордер
	НоваяСтрока = ТаблицаОбъектов.Добавить();
	НоваяСтрока.ТипОбъекта = Метаданные.Документы.ПриходныйКассовыйОрдер.ПолноеИмя();
	НоваяСтрока.Представление = Метаданные.Документы.ПриходныйКассовыйОрдер.Представление();
	НоваяСтрока.ЕстьОрганизация = Истина;
	НоваяСтрока.ЕстьКонтрагент = Ложь;
	
	// Реализация товаров и услуг
	НоваяСтрока = ТаблицаОбъектов.Добавить();
	НоваяСтрока.ТипОбъекта = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
	НоваяСтрока.Представление = Метаданные.Документы.РеализацияТоваровУслуг.Представление();
	НоваяСтрока.ЕстьОрганизация = Истина;
	НоваяСтрока.ЕстьКонтрагент = Истина;
	
	// Акт выполненных работ
	НоваяСтрока = ТаблицаОбъектов.Добавить();
	НоваяСтрока.ТипОбъекта = Метаданные.Документы.АктВыполненныхРабот.ПолноеИмя();
	НоваяСтрока.Представление = Метаданные.Документы.АктВыполненныхРабот.Представление();
	НоваяСтрока.ЕстьОрганизация = Истина;
	НоваяСтрока.ЕстьКонтрагент = Истина;
	
	// Перемещение товаров
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПеремещениеТоваров") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ПеремещениеТоваров.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ПеремещениеТоваров.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Ложь;
	КонецЕсли;
	
	// Передача товаров хранителю
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ПередачаТоваровХранителю.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ПередачаТоваровХранителю.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	// Отгрузка товаров с хранения
	ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи =
						ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	Если ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ОтгрузкаТоваровСХранения.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ОтгрузкаТоваровСХранения.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Истина;
	КонецЕсли;
	
	
	// Выкуп возвратной тары клиентом
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ВыкупВозвратнойТарыКлиентом.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ВыкупВозвратнойТарыКлиентом.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Ложь;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОказаниеАгентскихУслугПриЗакупке") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ТипОбъекта = Метаданные.Документы.ОтчетКомитентуОЗакупках.ПолноеИмя();
		НоваяСтрока.Представление = Метаданные.Документы.ОтчетКомитентуОЗакупках.Представление();
		НоваяСтрока.ЕстьОрганизация = Истина;
		НоваяСтрока.ЕстьКонтрагент = Ложь;
	КонецЕсли;
		
	Возврат ТаблицаОбъектов;
	
КонецФункции

#КонецОбласти

#КонецЕсли
